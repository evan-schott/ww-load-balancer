package lb

import (
	context "context"
)

// ArithServer satisfies the Arith_Server interface that was generated
// by the capnp compiler.
type EchoServer struct{}

// Multiply is the concrete implementation of the Multiply method that was
// defined in the schema. Notice that the method signature matches that of
// the Arith_Server interface.
//
// The Arith_multiply struct was generated by the capnp compiler.  You will
// find it in arith.capnp.go
func (EchoServer) Send(ctx context.Context, call Echo_echo) error {
	res, err := call.AllocResults() // allocate the results struct
	if err != nil {
		return err
	}

	// Set the response to just echo the input message
	msg, err := call.Args().Payload()
	if err != nil {
		return err
	}

	return res.SetResponse(msg)
}

func Data(b []byte) func(Echo_echo_Params) error {
	return func(call Echo_echo_Params) error {
		return call.SetPayload(b)
	}
}

package handler

import (
	context "context"
	"log"
)

// HandlerServer satisfies the Handler_Server interface that was generated
// by the capnp compiler.
type HandlerServer struct{}

type Payload struct {
	Message string `json:"message"`
}

// Handle is the concrete implementation of the Handle method that was
// defined in the schema. Notice that the method signature matches that of
// the Handler_Server interface.
//
// The Handler_handle struct was generated by the capnp compiler.  You will
// find it in handler.capnp.go
func (HandlerServer) Handle(ctx context.Context, call Handler_handle) error {
	res, err := call.AllocResults() // allocate the results struct
	if err != nil {
		return err
	}

	// TODO: could get fancy here and implement more fancy logic on entire request
	req, _ := call.Args().Request()
	modified := req + " You have been echoed by worker!"
	log.Println("Recvd: " + req)
	log.Println("Returning: " + modified)

	res.SetResponse(modified)
	return nil
}
